/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DNSRegistry,
  DNSRegistryInterface,
} from "../../../contracts/registry/DNSRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "domainPlainText",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewDomainOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "domains",
        type: "bytes32[]",
      },
    ],
    name: "bulkResolve",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "cname",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cnames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "makeDomain",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setCName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubDomain",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000808060001b815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611296806100776000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5f182e41161005b578063b5f182e414610139578063c91381e514610169578063ed36e47d14610199578063f9e54234146101c957610088565b80633b3b57de1461008d5780636932854f146100bd578063917906b5146100ed5780639b24f1951461011d575b600080fd5b6100a760048036038101906100a2919061082b565b6101f9565b6040516100b49190610899565b60405180910390f35b6100d760048036038101906100d2919061082b565b610238565b6040516100e491906108cf565b60405180910390f35b61010760048036038101906101029190610916565b6102a5565b60405161011491906109d3565b60405180910390f35b61013760048036038101906101329190610b2a565b610345565b005b610153600480360381019061014e9190610b99565b6104ae565b6040516101609190610be8565b60405180910390f35b610183600480360381019061017e9190610b2a565b6104e1565b6040516101909190610be8565b60405180910390f35b6101b360048036038101906101ae9190610916565b610627565b6040516101c091906109d3565b60405180910390f35b6101e360048036038101906101de9190610ccb565b6106f8565b6040516101f09190610dd2565b60405180910390f35b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600160205280600052604060002060009150905080546102c490610e23565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610e23565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b505050505081565b823373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103b357600080fd5b6000836040516020016103c69190610e90565b60405160208183030381529060405280519060200120905060006103ea86836104ae565b90503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461045957600080fd5b84600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816104a5919061105d565b50505050505050565b600082826040516020016104c3929190611150565b60405160208183030381529060405280519060200120905092915050565b6000833373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055157600080fd5b6000846040516020016105649190610e90565b604051602081830303815290604052805190602001209050600061058887836104ae565b90508460008083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550867ffe3504a1644f9523da19bb06fcbeffd519608ccc63bf4898bb1d6a1c8f04b4b68388886040516106129392919061117c565b60405180910390a28093505050509392505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461067390610e23565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90610e23565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b50505050509050919050565b60606000825167ffffffffffffffff811115610717576107166109ff565b5b6040519080825280602002602001820160405280156107455781602001602082028036833780820191505090505b50905060005b83518110156107d75761077784828151811061076a576107696111ba565b5b60200260200101516101f9565b82828151811061078a576107896111ba565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806107cf90611218565b91505061074b565b5080915050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610808816107f5565b811461081357600080fd5b50565b600081359050610825816107ff565b92915050565b600060208284031215610841576108406107eb565b5b600061084f84828501610816565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088382610858565b9050919050565b61089381610878565b82525050565b60006020820190506108ae600083018461088a565b92915050565b60008115159050919050565b6108c9816108b4565b82525050565b60006020820190506108e460008301846108c0565b92915050565b6108f381610878565b81146108fe57600080fd5b50565b600081359050610910816108ea565b92915050565b60006020828403121561092c5761092b6107eb565b5b600061093a84828501610901565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561097d578082015181840152602081019050610962565b60008484015250505050565b6000601f19601f8301169050919050565b60006109a582610943565b6109af818561094e565b93506109bf81856020860161095f565b6109c881610989565b840191505092915050565b600060208201905081810360008301526109ed818461099a565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a3782610989565b810181811067ffffffffffffffff82111715610a5657610a556109ff565b5b80604052505050565b6000610a696107e1565b9050610a758282610a2e565b919050565b600067ffffffffffffffff821115610a9557610a946109ff565b5b610a9e82610989565b9050602081019050919050565b82818337600083830152505050565b6000610acd610ac884610a7a565b610a5f565b905082815260208101848484011115610ae957610ae86109fa565b5b610af4848285610aab565b509392505050565b600082601f830112610b1157610b106109f5565b5b8135610b21848260208601610aba565b91505092915050565b600080600060608486031215610b4357610b426107eb565b5b6000610b5186828701610816565b935050602084013567ffffffffffffffff811115610b7257610b716107f0565b5b610b7e86828701610afc565b9250506040610b8f86828701610901565b9150509250925092565b60008060408385031215610bb057610baf6107eb565b5b6000610bbe85828601610816565b9250506020610bcf85828601610816565b9150509250929050565b610be2816107f5565b82525050565b6000602082019050610bfd6000830184610bd9565b92915050565b600067ffffffffffffffff821115610c1e57610c1d6109ff565b5b602082029050602081019050919050565b600080fd5b6000610c47610c4284610c03565b610a5f565b90508083825260208201905060208402830185811115610c6a57610c69610c2f565b5b835b81811015610c935780610c7f8882610816565b845260208401935050602081019050610c6c565b5050509392505050565b600082601f830112610cb257610cb16109f5565b5b8135610cc2848260208601610c34565b91505092915050565b600060208284031215610ce157610ce06107eb565b5b600082013567ffffffffffffffff811115610cff57610cfe6107f0565b5b610d0b84828501610c9d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d4981610878565b82525050565b6000610d5b8383610d40565b60208301905092915050565b6000602082019050919050565b6000610d7f82610d14565b610d898185610d1f565b9350610d9483610d30565b8060005b83811015610dc5578151610dac8882610d4f565b9750610db783610d67565b925050600181019050610d98565b5085935050505092915050565b60006020820190508181036000830152610dec8184610d74565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3b57607f821691505b602082108103610e4e57610e4d610df4565b5b50919050565b600081905092915050565b6000610e6a82610943565b610e748185610e54565b9350610e8481856020860161095f565b80840191505092915050565b6000610e9c8284610e5f565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ecc565b610f138683610ecc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610f5a610f55610f5084610f2b565b610f35565b610f2b565b9050919050565b6000819050919050565b610f7483610f3f565b610f88610f8082610f61565b848454610ed9565b825550505050565b600090565b610f9d610f90565b610fa8818484610f6b565b505050565b5b81811015610fcc57610fc1600082610f95565b600181019050610fae565b5050565b601f82111561101157610fe281610ea7565b610feb84610ebc565b81016020851015610ffa578190505b61100e61100685610ebc565b830182610fad565b50505b505050565b600082821c905092915050565b600061103460001984600802611016565b1980831691505092915050565b600061104d8383611023565b9150826002028217905092915050565b61106682610943565b67ffffffffffffffff81111561107f5761107e6109ff565b5b6110898254610e23565b611094828285610fd0565b600060209050601f8311600181146110c757600084156110b5578287015190505b6110bf8582611041565b865550611127565b601f1984166110d586610ea7565b60005b828110156110fd578489015182556001820191506020850194506020810190506110d8565b8683101561111a5784890151611116601f891682611023565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b61114a611145826107f5565b61112f565b82525050565b600061115c8285611139565b60208201915061116c8284611139565b6020820191508190509392505050565b60006060820190506111916000830186610bd9565b81810360208301526111a3818561099a565b90506111b2604083018461088a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122382610f2b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611255576112546111e9565b5b60018201905091905056fea26469706673582212205b4605f829b9331cce377ac025d6781fcaeb8898a5fd0e6f16d1480806b56bb464736f6c63430008130033";

type DNSRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DNSRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DNSRegistry__factory extends ContractFactory {
  constructor(...args: DNSRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DNSRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DNSRegistry__factory {
    return super.connect(runner) as DNSRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DNSRegistryInterface {
    return new Interface(_abi) as DNSRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DNSRegistry {
    return new Contract(address, _abi, runner) as unknown as DNSRegistry;
  }
}
