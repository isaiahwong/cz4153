/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DNSRegistry,
  DNSRegistryInterface,
} from "../../../contracts/registry/DNSRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "domainPlainText",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewDomainOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "domains",
        type: "bytes32[]",
      },
    ],
    name: "bulkResolve",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "cname",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cnames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "makeDomain",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setCName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "parentDomain",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubDomain",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000808060001b815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112c6806100776000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5f182e41161005b578063b5f182e414610139578063c91381e514610169578063ed36e47d14610199578063f9e54234146101c957610088565b80633b3b57de1461008d5780636932854f146100bd578063917906b5146100ed5780639b24f1951461011d575b600080fd5b6100a760048036038101906100a291906107ef565b6101f9565b6040516100b4919061085d565b60405180910390f35b6100d760048036038101906100d291906107ef565b610238565b6040516100e49190610893565b60405180910390f35b610107600480360381019061010291906108da565b6102a5565b6040516101149190610997565b60405180910390f35b61013760048036038101906101329190610aee565b610345565b005b610153600480360381019061014e9190610b5d565b61043c565b6040516101609190610bac565b60405180910390f35b610183600480360381019061017e9190610aee565b61046f565b6040516101909190610bac565b60405180910390f35b6101b360048036038101906101ae91906108da565b6105eb565b6040516101c09190610997565b60405180910390f35b6101e360048036038101906101de9190610c8f565b6106bc565b6040516101f09190610d96565b60405180910390f35b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600160205280600052604060002060009150905080546102c490610de7565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610de7565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b505050505081565b823373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610e64565b60405180910390fd5b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081610435919061103a565b5050505050565b6000828260405160200161045192919061112d565b60405160208183030381529060405280519060200120905092915050565b6000833373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610e64565b60405180910390fd5b6000846040516020016105289190611195565b604051602081830303815290604052805190602001209050600061054c878361043c565b90508460008083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550867ffe3504a1644f9523da19bb06fcbeffd519608ccc63bf4898bb1d6a1c8f04b4b68388886040516105d6939291906111ac565b60405180910390a28093505050509392505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461063790610de7565b80601f016020809104026020016040519081016040528092919081815260200182805461066390610de7565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b50505050509050919050565b60606000825167ffffffffffffffff8111156106db576106da6109c3565b5b6040519080825280602002602001820160405280156107095781602001602082028036833780820191505090505b50905060005b835181101561079b5761073b84828151811061072e5761072d6111ea565b5b60200260200101516101f9565b82828151811061074e5761074d6111ea565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061079390611248565b91505061070f565b5080915050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107cc816107b9565b81146107d757600080fd5b50565b6000813590506107e9816107c3565b92915050565b600060208284031215610805576108046107af565b5b6000610813848285016107da565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108478261081c565b9050919050565b6108578161083c565b82525050565b6000602082019050610872600083018461084e565b92915050565b60008115159050919050565b61088d81610878565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b78161083c565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef6107af565b5b60006108fe848285016108c5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610941578082015181840152602081019050610926565b60008484015250505050565b6000601f19601f8301169050919050565b600061096982610907565b6109738185610912565b9350610983818560208601610923565b61098c8161094d565b840191505092915050565b600060208201905081810360008301526109b1818461095e565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109fb8261094d565b810181811067ffffffffffffffff82111715610a1a57610a196109c3565b5b80604052505050565b6000610a2d6107a5565b9050610a3982826109f2565b919050565b600067ffffffffffffffff821115610a5957610a586109c3565b5b610a628261094d565b9050602081019050919050565b82818337600083830152505050565b6000610a91610a8c84610a3e565b610a23565b905082815260208101848484011115610aad57610aac6109be565b5b610ab8848285610a6f565b509392505050565b600082601f830112610ad557610ad46109b9565b5b8135610ae5848260208601610a7e565b91505092915050565b600080600060608486031215610b0757610b066107af565b5b6000610b15868287016107da565b935050602084013567ffffffffffffffff811115610b3657610b356107b4565b5b610b4286828701610ac0565b9250506040610b53868287016108c5565b9150509250925092565b60008060408385031215610b7457610b736107af565b5b6000610b82858286016107da565b9250506020610b93858286016107da565b9150509250929050565b610ba6816107b9565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b600067ffffffffffffffff821115610be257610be16109c3565b5b602082029050602081019050919050565b600080fd5b6000610c0b610c0684610bc7565b610a23565b90508083825260208201905060208402830185811115610c2e57610c2d610bf3565b5b835b81811015610c575780610c4388826107da565b845260208401935050602081019050610c30565b5050509392505050565b600082601f830112610c7657610c756109b9565b5b8135610c86848260208601610bf8565b91505092915050565b600060208284031215610ca557610ca46107af565b5b600082013567ffffffffffffffff811115610cc357610cc26107b4565b5b610ccf84828501610c61565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d0d8161083c565b82525050565b6000610d1f8383610d04565b60208301905092915050565b6000602082019050919050565b6000610d4382610cd8565b610d4d8185610ce3565b9350610d5883610cf4565b8060005b83811015610d89578151610d708882610d13565b9750610d7b83610d2b565b925050600181019050610d5c565b5085935050505092915050565b60006020820190508181036000830152610db08184610d38565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dff57607f821691505b602082108103610e1257610e11610db8565b5b50919050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610e4e600e83610912565b9150610e5982610e18565b602082019050919050565b60006020820190508181036000830152610e7d81610e41565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ee67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ea9565b610ef08683610ea9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610f37610f32610f2d84610f08565b610f12565b610f08565b9050919050565b6000819050919050565b610f5183610f1c565b610f65610f5d82610f3e565b848454610eb6565b825550505050565b600090565b610f7a610f6d565b610f85818484610f48565b505050565b5b81811015610fa957610f9e600082610f72565b600181019050610f8b565b5050565b601f821115610fee57610fbf81610e84565b610fc884610e99565b81016020851015610fd7578190505b610feb610fe385610e99565b830182610f8a565b50505b505050565b600082821c905092915050565b600061101160001984600802610ff3565b1980831691505092915050565b600061102a8383611000565b9150826002028217905092915050565b61104382610907565b67ffffffffffffffff81111561105c5761105b6109c3565b5b6110668254610de7565b611071828285610fad565b600060209050601f8311600181146110a45760008415611092578287015190505b61109c858261101e565b865550611104565b601f1984166110b286610e84565b60005b828110156110da578489015182556001820191506020850194506020810190506110b5565b868310156110f757848901516110f3601f891682611000565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b611127611122826107b9565b61110c565b82525050565b60006111398285611116565b6020820191506111498284611116565b6020820191508190509392505050565b600081905092915050565b600061116f82610907565b6111798185611159565b9350611189818560208601610923565b80840191505092915050565b60006111a18284611164565b915081905092915050565b60006060820190506111c16000830186610b9d565b81810360208301526111d3818561095e565b90506111e2604083018461084e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125382610f08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361128557611284611219565b5b60018201905091905056fea26469706673582212207bfee6a4be5f0ebd86564b949727685db9ac5780637e3e7e7f35d0b94588465464736f6c63430008130033";

type DNSRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DNSRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DNSRegistry__factory extends ContractFactory {
  constructor(...args: DNSRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DNSRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DNSRegistry__factory {
    return super.connect(runner) as DNSRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DNSRegistryInterface {
    return new Interface(_abi) as DNSRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DNSRegistry {
    return new Contract(address, _abi, runner) as unknown as DNSRegistry;
  }
}
