/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AuctionMock,
  AuctionMockInterface,
} from "../../../../contracts/registrar/mock/AuctionMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AuctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AuctionExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "AuctionNotExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "BidExists",
    type: "error",
  },
  {
    inputs: [],
    name: "BidTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "CommitmentDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "auctionDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "auctionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "auctionHighestBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "auctionHighestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuctionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "hasAuctionExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "hasCommitment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "makeCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000f5438038062000f5483398181016040528101906100349190610090565b806100448161004b60201b60201c565b50506100bd565b8060018190555050565b600080fd5b6000819050919050565b61006d8161005a565b811461007857600080fd5b50565b60008151905061008a81610064565b92915050565b6000602082840312156100a6576100a5610055565b5b60006100b48482850161007b565b91505092915050565b610e8780620000cd6000396000f3fe6080604052600436106100915760003560e01c80637a5a69e3116100595780637a5a69e3146101b5578063acc532fd146101f2578063e3ce094d1461022f578063ee060ded1461024b578063fb456c5e1461028a57610091565b8063369e67d61461009657806342c80f05146100d357806348eda45d1461011057806369dcfe8b1461014d57806378cb51af1461018a575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610b04565b6102c7565b6040516100ca9190610b7a565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610b95565b610300565b6040516101079190610bdd565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610b95565b610322565b6040516101449190610bdd565b60405180910390f35b34801561015957600080fd5b50610174600480360381019061016f9190610b95565b61037e565b6040516101819190610c07565b60405180910390f35b34801561019657600080fd5b5061019f61043e565b6040516101ac9190610c31565b60405180910390f35b3480156101c157600080fd5b506101dc60048036038101906101d79190610b95565b610448565b6040516101e99190610bdd565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190610b95565b6104b7565b6040516102269190610c31565b60405180910390f35b61024960048036038101906102449190610c4c565b610557565b005b34801561025757600080fd5b50610272600480360381019061026d9190610c8c565b610566565b60405161028193929190610cdf565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190610b95565b610585565b6040516102be9190610c31565b60405180910390f35b6000848484846040516020016102e09493929190610da0565b604051602081830303815290604052805190602001209050949350505050565b6000426002600084815260200190815260200160002060020154109050919050565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414159050919050565b60008161038a81610448565b6103c0576040517fe6759c6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c981610300565b6103ff576040517f9eafe1b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6000816104c381610448565b6104f9576040517fe6759c6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61050281610300565b610538576040517f9eafe1b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600084815260200190815260200160002060010154915050919050565b6105628282346105a5565b5050565b6000806000610576868686610779565b92509250925093509350939050565b600060026000838152602001908152602001600020600201549050919050565b6105ae82610322565b156105e5576040517f3e0827ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105ee83610448565b6105fc576105fb83610998565b5b61060583610300565b1561063c576040517f04a5e67c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008111610676576040517fa0d26eb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550600260008481526020019081526020016000206001015481111561077457336002600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060026000858152602001908152602001600020600101819055508160026000858152602001908152602001600020600301819055505b505050565b60008060008061078b338888886102c7565b905061079687610448565b6107cc576040517fe6759c6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107d587610300565b61080b576040517f9eafe1b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081481610322565b61084a576040517f99d1f42800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081600260008a81526020019081526020016000206003015414610903576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000205490503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610901573d6000803e3d6000fd5b505b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905581600260008a8152602001908152602001600020600301541481600260008b815260200190815260200160002060030154945094509450505093509350939050565b6000600260008381526020019081526020016000206001018190555060006002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015442610a189190610e1d565b600260008381526020019081526020016000206002018190555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6582610a3a565b9050919050565b610a7581610a5a565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b6000819050919050565b610aab81610a98565b8114610ab657600080fd5b50565b600081359050610ac881610aa2565b92915050565b6000819050919050565b610ae181610ace565b8114610aec57600080fd5b50565b600081359050610afe81610ad8565b92915050565b60008060008060808587031215610b1e57610b1d610a35565b5b6000610b2c87828801610a83565b9450506020610b3d87828801610ab9565b9350506040610b4e87828801610ab9565b9250506060610b5f87828801610aef565b91505092959194509250565b610b7481610a98565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b600060208284031215610bab57610baa610a35565b5b6000610bb984828501610ab9565b91505092915050565b60008115159050919050565b610bd781610bc2565b82525050565b6000602082019050610bf26000830184610bce565b92915050565b610c0181610a5a565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b610c2b81610ace565b82525050565b6000602082019050610c466000830184610c22565b92915050565b60008060408385031215610c6357610c62610a35565b5b6000610c7185828601610ab9565b9250506020610c8285828601610ab9565b9150509250929050565b600080600060608486031215610ca557610ca4610a35565b5b6000610cb386828701610ab9565b9350506020610cc486828701610ab9565b9250506040610cd586828701610aef565b9150509250925092565b6000606082019050610cf46000830186610bce565b610d016020830185610c22565b610d0e6040830184610b6b565b949350505050565b60008160601b9050919050565b6000610d2e82610d16565b9050919050565b6000610d4082610d23565b9050919050565b610d58610d5382610a5a565b610d35565b82525050565b6000819050919050565b610d79610d7482610a98565b610d5e565b82525050565b6000819050919050565b610d9a610d9582610ace565b610d7f565b82525050565b6000610dac8287610d47565b601482019150610dbc8286610d68565b602082019150610dcc8285610d68565b602082019150610ddc8284610d89565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2882610ace565b9150610e3383610ace565b9250828201905080821115610e4b57610e4a610dee565b5b9291505056fea264697066735822122003c49a6a278681669369f52acbcf6092612afd45514cb114665abd396178cb5d64736f6c63430008130033";

type AuctionMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionMock__factory extends ContractFactory {
  constructor(...args: AuctionMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(duration, overrides || {});
  }
  override deploy(
    duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(duration, overrides || {}) as Promise<
      AuctionMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionMock__factory {
    return super.connect(runner) as AuctionMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionMockInterface {
    return new Interface(_abi) as AuctionMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AuctionMock {
    return new Contract(address, _abi, runner) as unknown as AuctionMock;
  }
}
